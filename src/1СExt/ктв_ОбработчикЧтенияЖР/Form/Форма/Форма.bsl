&НаКлиенте
Перем Результат;

#Область ПрограммныйИнтерфейс

// Функция - возвращает тип файла, обрабатываемый данной обработкой
// 
// Возвращаемое значение:
//  Строка -  тип файла, обрабатываемый данной обработкой
//
&НаКлиенте
Функция ТипФайла() Экспорт
	
	Возврат "LGP";
	
КонецФункции // ТипФайла()
	
// Функция - возвращает результат, накопленный обработкой
// 
// Параметры:
//  ЗавершениеОбработки      - Булево       Истина - выполнить действия при завершении обработки
//
// Возвращаемое значение:
//  Произвольный -  результат, накопленный обработкой
//
&НаКлиенте
Функция ПолучитьРезультат(ЗавершениеОбработки = Ложь) Экспорт
	
	Возврат Результат;
	
КонецФункции // ПолучитьРезультат()

// Процедура - проверяет, что элемент является записью журнала регистрации
// и добавляет его в массив записей
//
// Параметры:
//	Элемент         - Структура       проверяемый элемент
//		*Родитель            - Структура                 - ссылка на элемент-родитель
//		*Уровень             - Число                     - уровень иерархии элемента
//		*Индекс              - Число                     - индекс элемента в массиве значений родителя
//		*НомераСтрок         - Соответсвие(Число)        - массив номеров строк из которых был прочитан элемент и его дочерние элементы
//		*Значения            - Массив(Структура)         - массив дочерних элементов
//
&НаКлиенте
Процедура ДобавитьЗапись(Элемент) Экспорт
	
	Если НЕ Элемент.Уровень = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Элемент.Родитель.Индекс = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТипЗнч(Словари) = Тип("Структура") Тогда
		Словари = ПолучитьСловариДанныхЖР();
	КонецЕсли;
	
	ИмяФайла = "";
	Если Элемент.Свойство("ПутьКФайлу") Тогда
		ИмяФайла = Элемент.ПутьКФайлу;
	КонецЕсли;
	
	НомерСтроки = 0;
	Для Каждого ТекЭлемент Из Элемент.НомераСтрок Цикл
		НомерСтроки = ?(НомерСтроки = 0, ТекЭлемент.Ключ, Мин(НомерСтроки, ТекЭлемент.Ключ));
	КонецЦикла;
	
	Запись = Новый Структура();
	Запись.Вставить("ИмяФайла", ИмяФайла);
	Запись.Вставить("НомерСтроки", НомерСтроки);
	Запись.Вставить("Время", Дата(Элемент.Значения[0]));
	Запись.Вставить("СтатусТранзакции", Элемент.Значения[1]);
	
	Пользователь = Число(Элемент.Значения[3]);
	Если Словари.Свойство("Пользователи") Тогда
		ВремЗначение = Словари.Пользователи.Получить(Пользователь);
		Если НЕ ВремЗначение = Неопределено Тогда
			Пользователь = ВремЗначение;
		КонецЕсли;
	КонецЕсли;
	Запись.Вставить("Пользователь", Пользователь);
	
	Компьютер = Число(Элемент.Значения[4]);
	Если Словари.Свойство("Компьютеры") Тогда
		ВремЗначение = Словари.Компьютеры.Получить(Компьютер);
		Если НЕ ВремЗначение = Неопределено Тогда
			Компьютер = ВремЗначение;
		КонецЕсли;
	КонецЕсли;
	Запись.Вставить("Компьютер", Компьютер);
	
	Событие = Число(Элемент.Значения[7]);
	Если Словари.Свойство("События") Тогда
		ВремЗначение = Словари.События.Получить(Событие);
		Если НЕ ВремЗначение = Неопределено Тогда
			Событие = ВремЗначение;
		КонецЕсли;
	КонецЕсли;
	Запись.Вставить("Событие", Событие);
	
	Запись.Вставить("Важность", Элемент.Значения[8]);
	Запись.Вставить("Комментарий", ОбработатьКавычкиВСтроке(Элемент.Значения[9]));
	
	Метаданные = Число(Элемент.Значения[7]);
	Если Словари.Свойство("Метаданные") Тогда
		ВремЗначение = Словари.Метаданные.Получить(Метаданные);
		Если НЕ ВремЗначение = Неопределено Тогда
			Метаданные = ВремЗначение;
		КонецЕсли;
	КонецЕсли;
	Запись.Вставить("Метаданные", Метаданные);
	
	Запись.Вставить("ТипДанных", ОбработатьКавычкиВСтроке(Элемент.Значения[11].Значения[0]));
	Если Элемент.Значения[11].Значения.Количество() > 1 Тогда
		Запись.Вставить("Данные", ОбработатьКавычкиВСтроке(Элемент.Значения[11].Значения[1]));
	Иначе
		Запись.Вставить("Данные", "");
	КонецЕсли;
	Запись.Вставить("ПредставлениеДанных", ОбработатьКавычкиВСтроке(Элемент.Значения[12]));
	
	Если НЕ ТипЗнч(Результат) = Тип("Массив") Тогда
		Результат = Новый Массив();
	КонецЕсли;
	
	Результат.Добавить(Запись);
	
КонецПроцедуры // ДобавитьЗапись()

// Функция - проверяет, что элемент является записью журнала регистрации
// и проверяет необходимость удаления элемента
//
// Параметры:
//	Элемент                  - Структура          - проверяемый элемент (см. НужноУдалитьЭлемент)
//		*Родитель            - Структура                 - ссылка на элемент-родитель
//		*Уровень             - Число                     - уровень иерархии элемента
//		*Индекс              - Число                     - индекс элемента в массиве значений родителя
//		*НомераСтрок         - Соответсвие(Число)        - массив номеров строк из которых был прочитан элемент и его дочерние элементы
//		*Значения            - Массив(Структура)         - массив дочерних элементов
//
// Возвращаемое значение:
//   Булево - Истина - элемент нужно удалить после обработки
//
&НаКлиенте
Функция НужноУдалитьЭлемент(Элемент) Экспорт
	
	Если НЕ Элемент.Уровень = 1 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ Элемент.Родитель.Индекс = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // НужноУдалитьЭлемент()

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - Обработчик события формы "ПриСозданииНаСервере"
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДополнительныеПараметры") Тогда
		ДополнительныеПараметры = Параметры.ДополнительныеПараметры;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - удаляет начальные, конечные и экранированные кавычки из строки
//
// Параметры:
//  ПарамСтрока	 - Строка - строка для обработки
// 
// Возвращаемое значение:
//   Строка - результирующая строка
//
&НаКлиенте
Функция ОбработатьКавычкиВСтроке(Знач ПарамСтрока)
	
	ПарамСтрока = СтрЗаменить(ПарамСтрока, """""", """");
	
	Если Лев(ПарамСтрока, 1) = """" Тогда
		ПарамСтрока = Сред(ПарамСтрока, 2);
	КонецЕсли;
	
	Если Прав(ПарамСтрока, 1) = """" Тогда
		ПарамСтрока = Сред(ПарамСтрока, 1, СтрДлина(ПарамСтрока) - 1);
	КонецЕсли;
	
	Возврат СокрЛП(ПарамСтрока);
	
КонецФункции // ОбработатьКавычкиВСтроке()

// Функция - возвращает словари данных для чтения журнала регистрации
//
// Возвращаемое значение:
//   Структура - словари данных журнала регистрации
//
&НаКлиенте
Функция ПолучитьСловариДанныхЖР()
	
	ФайлЖурнала = Новый Файл(ДополнительныеПараметры.ПутьКФайлу);
	
	ПутьКФайлу = ФайлЖурнала.Путь + "1Cv8.lgf";
	
	Попытка
		РезультатЧтенияСловарей = ВладелецФормы.ПрочитатьСкобкофайл(ПутьКФайлу);
	Исключение
		Возврат Новый Структура();
	КонецПопытки;
	
	Если РезультатЧтенияСловарей.Количество() = 0 Тогда
		Возврат Новый Структура();
	Иначе
		Возврат РезультатЧтенияСловарей[0];
	КонецЕсли; 
	
КонецФункции // ПолучитьСловариДанныхЖР()

#КонецОбласти
